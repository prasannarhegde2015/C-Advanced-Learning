// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 11.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace CodedUITestProject2
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public partial class UIMap
    {
        
        /// <summary>
        /// RecordedMethod1
        /// </summary>
        public void RecordedMethod1()
        {
            #region Variable Declarations
            WinToolBar uIViewToolBar = this.UISystemInventoryLOWISWindow.UIHomePane.UIViewToolBar;
            #endregion

            // Click 'View' tool bar
            Mouse.Click(uIViewToolBar, new Point(18, 45));
        }
        
        #region Properties
        public UISystemInventoryLOWISWindow UISystemInventoryLOWISWindow
        {
            get
            {
                if ((this.mUISystemInventoryLOWISWindow == null))
                {
                    this.mUISystemInventoryLOWISWindow = new UISystemInventoryLOWISWindow();
                }
                return this.mUISystemInventoryLOWISWindow;
            }
        }
        
        public UILoadUpdateWizardWindow UILoadUpdateWizardWindow
        {
            get
            {
                if ((this.mUILoadUpdateWizardWindow == null))
                {
                    this.mUILoadUpdateWizardWindow = new UILoadUpdateWizardWindow();
                }
                return this.mUILoadUpdateWizardWindow;
            }
        }
        
        public UILOWISmeinwessqalwUseWindow UILOWISmeinwessqalwUseWindow
        {
            get
            {
                if ((this.mUILOWISmeinwessqalwUseWindow == null))
                {
                    this.mUILOWISmeinwessqalwUseWindow = new UILOWISmeinwessqalwUseWindow();
                }
                return this.mUILOWISmeinwessqalwUseWindow;
            }
        }
        
        public UILOWISMEINWESSQALW01UWindow UILOWISMEINWESSQALW01UWindow
        {
            get
            {
                if ((this.mUILOWISMEINWESSQALW01UWindow == null))
                {
                    this.mUILOWISMEINWESSQALW01UWindow = new UILOWISMEINWESSQALW01UWindow();
                }
                return this.mUILOWISMEINWESSQALW01UWindow;
            }
        }
        #endregion
        
        #region Fields
        private UISystemInventoryLOWISWindow mUISystemInventoryLOWISWindow;
        
        private UILoadUpdateWizardWindow mUILoadUpdateWizardWindow;
        
        private UILOWISmeinwessqalwUseWindow mUILOWISmeinwessqalwUseWindow;
        
        private UILOWISMEINWESSQALW01UWindow mUILOWISMEINWESSQALW01UWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UISystemInventoryLOWISWindow : WinWindow
    {
        
        public UISystemInventoryLOWISWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "System Inventory - LOWIS Update Manager";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("System Inventory - LOWIS Update Manager");
            #endregion
        }
        
        #region Properties
        public UIHomePane UIHomePane
        {
            get
            {
                if ((this.mUIHomePane == null))
                {
                    this.mUIHomePane = new UIHomePane(this);
                }
                return this.mUIHomePane;
            }
        }
        #endregion
        
        #region Fields
        private UIHomePane mUIHomePane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIHomePane : WinPane
    {
        
        public UIHomePane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = "Home";
            this.WindowTitles.Add("System Inventory - LOWIS Update Manager");
            #endregion
        }
        
        #region Properties
        public WinToolBar UIViewToolBar
        {
            get
            {
                if ((this.mUIViewToolBar == null))
                {
                    this.mUIViewToolBar = new WinToolBar(this);
                    #region Search Criteria
                    this.mUIViewToolBar.SearchProperties[WinToolBar.PropertyNames.Name] = "View";
                    this.mUIViewToolBar.WindowTitles.Add("System Inventory - LOWIS Update Manager");
                    #endregion
                }
                return this.mUIViewToolBar;
            }
        }
        #endregion
        
        #region Fields
        private WinToolBar mUIViewToolBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UILoadUpdateWizardWindow : WinWindow
    {
        
        public UILoadUpdateWizardWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Load Update Wizard";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Load Update Wizard");
            #endregion
        }
        
        #region Properties
        public UILoadUpdateWizardDialog UILoadUpdateWizardDialog
        {
            get
            {
                if ((this.mUILoadUpdateWizardDialog == null))
                {
                    this.mUILoadUpdateWizardDialog = new UILoadUpdateWizardDialog(this);
                }
                return this.mUILoadUpdateWizardDialog;
            }
        }
        #endregion
        
        #region Fields
        private UILoadUpdateWizardDialog mUILoadUpdateWizardDialog;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UILoadUpdateWizardDialog : WinControl
    {
        
        public UILoadUpdateWizardDialog(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Load Update Wizard";
            this.SearchProperties[UITestControl.PropertyNames.ControlType] = "Dialog";
            this.WindowTitles.Add("Load Update Wizard");
            #endregion
        }
        
        #region Properties
        public WinButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[WinButton.PropertyNames.Name] = "&OK";
                    this.mUIOKButton.WindowTitles.Add("Load Update Wizard");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UILOWISmeinwessqalwUseWindow : WinWindow
    {
        
        public UILOWISmeinwessqalwUseWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "LOWIS: meinwessqalw (User: WFT\\hegdepr, Role: Administrators)";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("LOWIS: meinwessqalw (User: WFT\\hegdepr, Role: Administrators)");
            #endregion
        }
        
        #region Properties
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow(this);
                }
                return this.mUIItemWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow mUIItemWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIItemWindow : WinWindow
    {
        
        public UIItemWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "1";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "3";
            this.WindowTitles.Add("LOWIS: meinwessqalw (User: WFT\\hegdepr, Role: Administrators)");
            #endregion
        }
        
        #region Properties
        public WinButton UILessButton
        {
            get
            {
                if ((this.mUILessButton == null))
                {
                    this.mUILessButton = new WinButton(this);
                    #region Search Criteria
                    this.mUILessButton.SearchProperties[WinButton.PropertyNames.Name] = "Less";
                    this.mUILessButton.WindowTitles.Add("LOWIS: meinwessqalw (User: WFT\\hegdepr, Role: Administrators)");
                    #endregion
                }
                return this.mUILessButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUILessButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UILOWISMEINWESSQALW01UWindow : WinWindow
    {
        
        public UILOWISMEINWESSQALW01UWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "LOWIS: MEINWESSQALW01 (User: WFT\\hegdepr, Role: Administrators)";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("LOWIS: MEINWESSQALW01 (User: WFT\\hegdepr, Role: Administrators)");
            #endregion
        }
        
        #region Properties
        public UIItemClient UIItemClient
        {
            get
            {
                if ((this.mUIItemClient == null))
                {
                    this.mUIItemClient = new UIItemClient(this);
                }
                return this.mUIItemClient;
            }
        }
        #endregion
        
        #region Fields
        private UIItemClient mUIItemClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIItemClient : WinClient
    {
        
        public UIItemClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.ClassName] = "Internet Explorer_Server";
            this.WindowTitles.Add("LOWIS: MEINWESSQALW01 (User: WFT\\hegdepr, Role: Administrators)");
            #endregion
        }
        
        #region Properties
        public UIBeamDownholeParameteDocument UIBeamDownholeParameteDocument
        {
            get
            {
                if ((this.mUIBeamDownholeParameteDocument == null))
                {
                    this.mUIBeamDownholeParameteDocument = new UIBeamDownholeParameteDocument(this);
                }
                return this.mUIBeamDownholeParameteDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIBeamDownholeParameteDocument mUIBeamDownholeParameteDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIBeamDownholeParameteDocument : HtmlDocument
    {
        
        public UIBeamDownholeParameteDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "params_Downhole";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Beam Downhole Parameters";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "C:/Users/hegdepr/csstore/12/MEINWESSQALW01/DEMODB/ALLPRODS/cslift/LIFTSRV/XHTML/B" +
                "EAM/DHTML/PARAMS_DOWNHOLE.HTM";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "file://C:\\Users\\hegdepr\\csstore\\12\\MEINWESSQALW01\\DEMODB\\ALLPRODS\\cslift\\LIFTSRV\\" +
                "XHTML\\BEAM\\DHTML\\PARAMS_DOWNHOLE.HTM";
            this.WindowTitles.Add("LOWIS: MEINWESSQALW01 (User: WFT\\hegdepr, Role: Administrators)");
            #endregion
        }
        
        #region Properties
        public HtmlEdit UITxtPerfTopEdit
        {
            get
            {
                if ((this.mUITxtPerfTopEdit == null))
                {
                    this.mUITxtPerfTopEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUITxtPerfTopEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "txtPerfTop";
                    this.mUITxtPerfTopEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = null;
                    this.mUITxtPerfTopEdit.SearchProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUITxtPerfTopEdit.SearchProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUITxtPerfTopEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUITxtPerfTopEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "clsFloatEdit";
                    this.mUITxtPerfTopEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=txtPerfTop dataSrc=#oBeamDHParams cla";
                    this.mUITxtPerfTopEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "1";
                    this.mUITxtPerfTopEdit.WindowTitles.Add("LOWIS: MEINWESSQALW01 (User: WFT\\hegdepr, Role: Administrators)");
                    #endregion
                }
                return this.mUITxtPerfTopEdit;
            }
        }
        #endregion
        
        #region Fields
        private HtmlEdit mUITxtPerfTopEdit;
        #endregion
    }
}
